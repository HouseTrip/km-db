#!/usr/bin/env ruby
=begin
    
  Import KM events from the raw dumps.

=end

require 'rubygems'
require 'kmdb'

if KMDB::Event.connection.class.to_s =~ /(mysql|pgsql)/i
  parser_class = KMDB::ParallelParser
else
  parser_class = KMDB::Parser
end

parser = parser_class.new(:resume  => 'import', 
                          :verbose => true)

# import events by category
parser.add_filter { |text, event|
  if event['_p2']
    KMDB::User.alias! event
  elsif event['_n']
    KMDB::Event.record event
  else
    KMDB::Property.set event
  end
  
  event
}

parser.run(ARGV)                   # heavy lifting here
KMDB::Event.connection.reconnect!  # reconnect to database (breaks because of processes forking off)
KMDB::User.resolve_alias_chains!   # detect and filter alias chains
KMDB::Key.fix_duplicates!          # remove key duplicates